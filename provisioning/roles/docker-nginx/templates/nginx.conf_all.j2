
#user  nobody;

#daemon off; # handled in Dockerfile

worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';
    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;
    client_max_body_size 10G;
    #gzip  on;

    # http://nginx.org/en/docs/http/websocket.html
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    # https://stackoverflow.com/a/23473456/261210
    # Enable SSL session caching for improved performance: http://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_session_cache
    ssl_session_cache shared:ssl_session_cache:10m;

    server {
       listen         80;
       server_name    {{nginx_server_name}};
       return         301 https://$server_name$request_uri;
    }

    server {
        server_name  {{nginx_server_name}};

        listen 443 ssl;
        ssl_certificate /etc/ssl/certs/certchain.crt;
        ssl_certificate_key /etc/ssl/private/cert.key;
        ssl_password_file /etc/keys/global.pass;

        # https://www.ssllabs.com/ssltest/analyze.html?d=o2r.uni-muenster.de&hideResults=on
        ssl_protocols TLSv1.2 TLSv1.3;
        
        # https://bjornjohansen.no/optimizing-https-nginx and https://blog.qualys.com/ssllabs/2013/08/05/configuring-apache-nginx-and-openssl-for-forward-secrecy
        ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA !RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS";
        ssl_prefer_server_ciphers on;
        
        # HSTS configuration, see also https://www.nginx.com/blog/http-strict-transport-security-hsts-and-nginx/
        # max-age is 31,536,000 seconds, equal to about 1 year
        add_header Strict-Transport-Security "max-age=31536000;includeSubDomains" always;

        # https://weakdh.org/sysadmin.html
        ssl_dhparam /etc/dhparams.pem;

        #charset koi8-r;
        #access_log  logs/host.access.log  main;

        # based on https://github.com/o2r-project/o2r-UI/blob/master/ui/dev/nginx.conf
        location / {
            include mime.types;
            # https://docs.nginx.com/nginx/admin-guide/web-server/serving-static-content/
            root /usr/share/nginx/html;
            index index.html;
        }

        location /api {
            include cors.conf;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_read_timeout 30m;
            proxy_pass http://o2r-muncher:8080;
        }

        location /api/v1/auth {
            include cors.conf;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_pass http://o2r-bouncer:8083;
        }

        location /api/v1/user {
            include cors.conf;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_pass http://o2r-bouncer:8083;
        }

        #location /api/v1/search {
        #    proxy_set_header Host $host;
        #    proxy_set_header X-Real-IP $remote_addr;
        #    proxy_pass http://o2r-finder:8084;
        #}

        location /api/v1/shipment {
            include cors.conf;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_pass http://o2r-shipper:8087;
        }

        location /api/v1/recipient {
            include cors.conf;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_pass http://o2r-shipper:8087;
        }

        location /api/v1/substitution {
            include cors.conf;
            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_pass http://o2r-substituter:8090;
        }

        location ~* ^/api/v1/compendium/[^/]+/binding {
            include cors.conf;
            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_pass http://{{bindings_role.container.name}}:8092;
        }

        location /api/v1/bindings {
            include cors.conf;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_pass http://{{bindings_role.container.name}}:8092;
        }

        #location /piwik {
        #    proxy_set_header Host $host;
        #    proxy_set_header X-Real-IP $remote_addr;
        #    proxy_pass http://piwik:80;
        #}

        location /mongo-express {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_pass http://mongo-express:8081;
        }

        location ~* \.io {
            include cors.conf;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            
            proxy_pass http://o2r-informer:8082;
        }

        location /wwuproxy/ {
            include cors.conf;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            proxy_pass https://www.uni-muenster.de/;
        }

        #location /api/1.0/badge {
        #    include cors.conf;
        #
        #    proxy_set_header Host $host;
        #    proxy_set_header X-Real-IP $remote_addr;
        #    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #
        #    proxy_pass http://o2r-badger:8089;
        #}

        location /_config/ {
            include cors.conf;
            root   /usr/share/nginx/html; 
            index  versions.json; 
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
}
